AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Lambda for Idle Resource Pickup with API and Monthly Triggers

Parameters:
  LambdaPrefix:
    Type: String
    Default: "idle-resource"
    Description: Prefix for naming all resources

  LambdaCodeS3Bucket:
    Type: String
    Description: S3 bucket where the Lambda ZIP file is stored

  LambdaCodeS3Key:
    Type: String
    Description: S3 key (file path) to the Lambda ZIP file

  ScheduleExpression:
    Type: String
    Default: "rate(30 days)"
    Description: Schedule expression for monthly EventBridge rule (e.g. 'rate(30 days)' or 'cron(0 9 1 * ? *)')

Resources:

  ##############################
  # IAM Role for Lambda
  ##############################
  IdleResourceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaPrefix}-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
      Policies:
        - PolicyName: AllowS3WriteForIdleReport
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${LambdaCodeS3Bucket}/reports/*"

  ##############################
  # Lambda Function
  ##############################
  IdleResourceLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${LambdaPrefix}-pickup"
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Role: !GetAtt IdleResourceLambdaRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3Key
      MemorySize: 128
      Timeout: 600
      Environment:
        Variables:
          OUTPUT_BUCKET: !Ref LambdaCodeS3Bucket

  ##############################
  # API Gateway (On-Demand Trigger)
  ##############################
  IdleResourceAPIGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${LambdaPrefix}-api"
      Description: API for manual triggering of the Lambda

  IdleResourceAPIGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !GetAtt IdleResourceAPIGateway.RootResourceId
      RestApiId: !Ref IdleResourceAPIGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IdleResourceLambda.Arn}/invocations"
      MethodResponses:
        - StatusCode: 200

  IdleResourceDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: IdleResourceAPIGatewayMethod
    Properties:
      RestApiId: !Ref IdleResourceAPIGateway
      StageName: default

  LambdaAPIGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IdleResourceLambda
      Principal: apigateway.amazonaws.com

  ##############################
  # EventBridge (Scheduled Trigger)
  ##############################
  IdleResourceEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${LambdaPrefix}-monthly-trigger"
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !GetAtt IdleResourceLambda.Arn
          Id: MonthlyIdleResourceTarget
          Input: '{}'

  LambdaEventBridgeInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IdleResourceLambda
      Principal: events.amazonaws.com
      SourceArn: !GetAtt IdleResourceEventBridgeRule.Arn

Outputs:
  LambdaFunctionArn:
    Value: !GetAtt IdleResourceLambda.Arn
    Description: ARN of the idle resource pickup Lambda

  APIEndpoint:
    Description: API Gateway endpoint to trigger Lambda
    Value: !Sub "https://${IdleResourceAPIGateway}.execute-api.${AWS::Region}.amazonaws.com/default"

  LambdaExecutionRole:
    Description: IAM Role assumed by the Lambda function
    Value: !GetAtt IdleResourceLambdaRole.Arn
